{"version":3,"sources":["components/header.jsx","notes.js","components/note.jsx","components/footer.jsx","components/createArea.jsx","components/App.jsx","index.js"],"names":["header","notes","props","className","title","content","onClick","onDelete","id","footer","year","Date","getFullYear","CreateNote","useState","isExpanded","setExpanded","desc","setNotes","handleChange","event","target","name","value","prevNote","onChange","type","placeholder","rows","Zoom","in","addNote","alert","preventDefault","App","newNote","setNewNote","deleteNote","prevNotes","filter","noteItem","index","notesContent","map","note","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"+MAIe,SAASA,IACpB,OACI,iCACI,+BAAI,cAAC,IAAD,IAAJ,cCPZ,I,iBCIe,SAASC,EAAMC,GAK1B,OACI,sBAAKC,UAAU,YAAf,UACI,oBAAGA,UAAU,OAAb,UAAoB,4BAAID,EAAME,QAAU,uBAAOF,EAAMG,WACrD,wBAAQF,UAAU,YAAYG,QAPtC,WACIJ,EAAMK,SAASL,EAAMM,KAMjB,SACI,cAAC,IAAD,SCVD,SAASC,IACpB,IAAIC,GAAO,IAAIC,MAAOC,cACtB,OACI,oBAAGT,UAAU,SAAb,6BAAyCO,K,6CCDlC,SAASG,EAAWX,GAAO,IAAD,EACHY,oBAAS,GADN,mBAC9BC,EAD8B,KAClBC,EADkB,OAEXF,mBAAS,CAC3BV,MAAO,GACPa,KAAM,KAJuB,mBAE9BhB,EAF8B,KAEvBiB,EAFuB,KAMrC,SAASC,EAAaC,GAAO,IAAD,EACFA,EAAMC,OAArBC,EADiB,EACjBA,KAAMC,EADW,EACXA,MACbL,GAAS,SAAAM,GACL,OAAO,2BACAA,GADP,kBAEKF,EAAOC,OAoBpB,OACI,qBAAKpB,UAAU,UAAf,SACE,iCACGY,GACC,uBAAOU,SAAUN,EAAchB,UAAU,eACvCoB,MAAOtB,EAAMG,MAAOsB,KAAK,OAAOJ,KAAK,QAAQK,YAAY,UAI7D,0BACErB,QAbV,WACEU,GAAY,IAaJS,SAAUN,EAAchB,UAAU,cAClCoB,MAAOtB,EAAMgB,KAAMK,KAAK,OACxBM,KAAMb,EAAa,IAAM,IACzBY,YAAY,mBAEH,uBACX,cAACE,EAAA,EAAD,CAAMC,KAAIf,EACRZ,UAAU,mBADZ,SAEE,wBAAQG,QAnClB,SAAiBc,GACM,KAAhBnB,EAAMG,OAA8B,KAAdH,EAAMgB,KAC7Bf,EAAM6B,QAAQ9B,GAGd+B,MAAM,gDAENd,EAAS,CACPd,MAAO,GACPa,KAAM,KAEVG,EAAMa,kBAwBA,SACE,cAAC,IAAD,aC5BD,SAASC,IAAM,IAAD,EACKpB,mBAAS,IADd,mBAClBqB,EADkB,KACTC,EADS,KAOzB,SAASC,EAAW7B,GAChB4B,GAAW,SAAAE,GACP,OAAOA,EAAUC,QAAO,SAACC,EAAUC,GAC/B,OAAOA,IAAUjC,QAI7B,OACI,gCACI,cAAC,EAAD,IACA,sBAAKL,UAAU,iBAAf,UACE,cAAC,EAAD,CAAY4B,QAhBtB,SAAoBW,GAChBN,GAAW,SAAAZ,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAqBkB,UAelBP,EAAQQ,KAAI,SAACC,EAAMpC,GAAP,OACP,cAAC,EAAD,CAEIA,GAAIA,EACJJ,MAAOwC,EAAKxC,MACZC,QAASuC,EAAK3B,KACdV,SAAU8B,GAJL7B,SASjB,cAAC,EAAD,OCtDZ,IAAMqC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACR,cAAC,IAAMC,WAAP,UACE,cAAChB,EAAD,MAEFW,I","file":"static/js/main.c4091274.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\nimport HighlightIcon from '@material-ui/icons/Highlight';\r\n\r\nexport default function header(){\r\n    return(\r\n        <header>\r\n            <h1><HighlightIcon />Keeper</h1>\r\n        </header>\r\n    );\r\n}\r\n\r\n","const notes= [\r\n      {\r\n        id:1, \r\n        title:\"Delegation\",\r\n        content:\"As they are naturally curious about the world around them, young children ask lots and lots of questions.\"\r\n    },\r\n      {\r\n        id:2, \r\n        title:\"Loops\",\r\n        content:\"Loops are frequently used in those programs where we have to repeat a certain code.\"\r\n    },\r\n      {\r\n        id:3, \r\n        title:\"Arrays\",\r\n        content:\"Arrays are used in programming to store a large number of values with same name. i.e, lists.\"\r\n    },\r\n      {\r\n        id:4, \r\n        title:\"Hardware Vs Software\",\r\n        content:\"Hardware is any physical thing while software is a set of instructions that tells a computer what to do and how to do?\"\r\n    },\r\n      {\r\n        id:5, \r\n        title:\"Arrays\",\r\n        content:\"Arrays are used in programming to store a large number of values with same name. i.e, lists.\"\r\n    },\r\n      {\r\n        id:6, \r\n        title:\"Hardware Vs Software\",\r\n        content:\"Hardware is any physical thing while software is a set of instructions that tells a computer what to do and how to do?\"\r\n    },\r\n      {\r\n        id:7, \r\n        title:\"Arrays\",\r\n        content:\"Arrays are used in programming to store a large number of values with same name. i.e, lists.\"\r\n    },\r\n      {\r\n        id:8, \r\n        title:\"Hardware Vs Software\",\r\n        content:\"Hardware is any physical thing while software is a set of instructions that tells a computer what to do and how to do?\"\r\n    }\r\n];\r\n\r\nexport default notes;","import React from \"react\";\r\nimport \"./style.css\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nexport default function notes(props){\r\n    function delNote(){\r\n        props.onDelete(props.id);\r\n    }\r\n\r\n    return(\r\n        <div className=\"showNotes\">\r\n            <p className=\"note\"><b>{props.title}</b><br />{props.content}</p>\r\n            <button className=\"deleteBtn\" onClick={delNote}>\r\n                <DeleteIcon />\r\n            </button>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport default function footer(){\r\n    var year = new Date().getFullYear();\r\n    return(\r\n        <p className=\"footer\">&copy; Copyrights {year}</p>\r\n    );\r\n}","import React, {useState} from \"react\";\r\nimport \"./style.css\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nexport default function CreateNote(props){\r\n    const [isExpanded, setExpanded] = useState(false);\r\n    const [notes, setNotes] = useState({\r\n            title: \"\",\r\n            desc: \"\"\r\n        });\r\n    function handleChange(event){\r\n        const {name, value} = event.target;\r\n        setNotes(prevNote => {\r\n            return {\r\n                ...prevNote,\r\n                [name]: value\r\n            }\r\n        });\r\n    }\r\n    function addNote(event){\r\n        if(notes.title !== \"\" && notes.desc !==\"\"){\r\n          props.addNote(notes);\r\n        }\r\n        else{\r\n          alert(\"Please add a note and its description first!\");\r\n        }\r\n          setNotes({\r\n            title: \"\",\r\n            desc: \"\"\r\n        });\r\n        event.preventDefault();\r\n    }\r\n    function expand(){\r\n      setExpanded(true);\r\n    }\r\n    return(\r\n        <div className=\"addNote\">\r\n          <form>\r\n            {isExpanded &&\r\n              <input onChange={handleChange} className=\"addNoteInput\" \r\n                value={notes.title} type=\"text\" name=\"title\" placeholder=\"Title\"\r\n              />\r\n            }\r\n\r\n            <textarea \r\n              onClick={expand}\r\n              onChange={handleChange} className=\"addNoteDesc\" \r\n              value={notes.desc} name=\"desc\" \r\n              rows={isExpanded ? \"3\" : \"1\"} \r\n              placeholder=\"Take a note...\"\r\n              > \r\n            </textarea><br />\r\n            <Zoom in={isExpanded ? true: false} \r\n              className=\"addNoteSubmitBtn\">\r\n              <button onClick={addNote}>\r\n                <AddIcon />\r\n              </button>\r\n            </Zoom>\r\n          </form>\r\n        </div>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport Header from \"./header\";\r\nimport Notes from \"../notes\";\r\nimport Note from \"./note\";\r\nimport Contacts from \"../contacts.js\";\r\nimport Card from \"./card\";\r\nimport Footer from \"./footer\";\r\nimport CreateArea from \"./createArea\";\r\n\r\nfunction createCards(contact){\r\n    return(\r\n        <Card \r\n            key={contact.id}\r\n            name={contact.name} \r\n            img={contact.img}\r\n            email={contact.email}\r\n        />\r\n    );\r\n}\r\nfunction Cards(){\r\n    return(\r\n        <div>\r\n            <h1 className=\"contacts\">Contacts</h1>\r\n            {Contacts.map(createCards)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function App(){\r\n    const [newNote, setNewNote] = useState([]);\r\n    function addNewNote(notesContent){\r\n        setNewNote(prevNote => {\r\n            return [...prevNote, notesContent];\r\n        });\r\n    };\r\n    function deleteNote(id){\r\n        setNewNote(prevNotes => {\r\n            return prevNotes.filter((noteItem, index) => {\r\n                return index !== id;\r\n            });\r\n        });\r\n    };\r\n    return(\r\n        <div>\r\n            <Header />\r\n            <div className=\"notesContainer\">\r\n              <CreateArea addNote={addNewNote}/>\r\n              {newNote.map((note, id) => (\r\n                    <Note\r\n                        key={id}\r\n                        id={id}\r\n                        title={note.title}\r\n                        content={note.desc}\r\n                        onDelete={deleteNote}\r\n                    />\r\n                ) )}\r\n            </div>\r\n            {/* <Cards /> */}\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App.jsx\";\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n <React.StrictMode>\r\n   <App />\r\n </React.StrictMode>,\r\n rootElement\r\n);"],"sourceRoot":""}